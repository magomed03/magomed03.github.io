[{"authors":null,"categories":null,"content":"Мажитов Магомед - студент Российского университета дружбы народов. Учится на 1-ом курсе по направлению “Математика и компьютерные науки”. Часто ходит в наушниках, любит играть волейбол, хочет найти себя в IT.\n  Download my resumé.\n","date":1651850408,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1651850408,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Мажитов Магомед - студент Российского университета дружбы народов. Учится на 1-ом курсе по направлению “Математика и компьютерные науки”. Часто ходит в наушниках, любит играть волейбол, хочет найти себя в IT.","tags":null,"title":"Мажитов Магомед","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Что такое Git? Git стал мировым стандартом для управления версиями. Так что же?\nGit — это распределенная система управления версиями. Это означает, что локальный клон проекта является полным репозиторием управления версиями. Полнофункциональные локальные репозитории упрощают работу в автономном режиме или в удаленном расположении. Разработчики фиксируют свою работу локально, а затем синхронизируют свою копию репозитория с копией на сервере. Эта парадигма отличается от централизованных систем управления версиями, где клиенты должны синхронизировать код с сервером перед созданием новой версии кода.\nГибкость и популярность Git делают его отличным выбором для любой команды. Многие разработчики и колледжа вузов уже знакомы с использованием Git. Сообщество пользователей Git создало много ресурсов для обучения разработчикам и популярностью Git, что упрощает получение справки при необходимости. Почти каждая среда разработки имеет поддержку Git, а средства командной строки Git работают в каждой основной операционной системе.\nОсновы Git При каждом сохранении работы Git создает фиксацию. Фиксация — это моментальный снимок всех файлов в момент времени. Если файл не был изменен с одной фиксации на следующий, Git использует сохраненный ранее файл. Этот проект отличается от других систем, в которых хранится первоначальная версия файла, и при этом сохраняются записи о различиях.\nФиксации создают ссылки на другие фиксации, формируя график истории разработки. Можно вернуть код к предыдущей фиксации, проверить, как изменились файлы с одной фиксации до следующей, и просмотреть сведения, например, где и когда были внесены изменения. Фиксации определяются в Git по уникальному криптографическиму хэшу содержимого фиксации. Так как все хэшировано, невозможно внести изменения, потерять информацию или повредить файлы, не обнаруживая их.\nВетви Каждый разработчик сохраняет изменения в собственном репозитории локального кода. В результате может существовать множество различных изменений, основанных на одной фиксации. Git предоставляет средства для изоляции изменений и последующего их слияния. Ветви, являющиеся облегченными указателями на выполняемые задачи, управляют этим разделением. После завершения работы, созданной в ветви, эту ветвь можно снова объединить с основной ветвью команды (или магистралью).\nФайлы и фиксации Файлы в Git находятся в одном из трех состояний: изменено, промежуточное или зафиксировано. При первом изменении файла изменения существуют только в рабочем каталоге. Они еще не являются частью фиксации или истории разработки. Разработчик должен разместить измененные файлы для включения в фиксацию. Промежуточная область содержит все изменения, которые включаются в следующую фиксацию. Когда разработчик довольны промежуточными файлами, они упаковываются как фиксация с сообщением с описанием изменений. Эта фиксация станет частью истории разработки.\nПромежуточное хранение позволяет разработчикам выбирать, какие изменения файлов следует сохранить в фиксации, чтобы разбить большие изменения на ряд небольших фиксаций. Уменьшая область фиксаций, проще Просмотреть журнал фиксаций, чтобы найти определенные изменения в файлах.\nПреимущества Git Одновременная разработка Каждый имеет собственную локальную копию кода и может работать одновременно с собственными ветвями. Git работает в автономном режиме, так как почти каждая операция является локальной.\nБыстрые выпуски Ветви обеспечивают гибкую и одновременную разработку. Главная ветвь содержит стабильный и высококачественный код, из которого выпускают. Ветви компонентов содержат выполняемые работы, которые объединяются в главную ветвь после завершения. Отделение ветви выпуска от разрабатываемой среды упрощает управление стабильным кодом и ускоряет доставку обновлений.\nВстроенная интеграция Из-за популярности Git интегрирован в большинство средств и продуктов. У каждой крупной интегрированной среды разработки есть встроенная поддержка Git, а многие инструменты поддерживают непрерывную интеграцию, непрерывное развертывание, автоматическое тестирование, отслеживание рабочих элементов, метрики и интеграцию функций создания отчетов с Git. Такая интеграция упрощает повседневный рабочий процесс.\nПоддержка надежных сообществ Git является открытым исходным кодом и стал стандартом де-факто для управления версиями, поэтому для рабочих групп не хватает средств и ресурсов. Объем поддержки сообщества для Git по сравнению с другими системами контроля версий упрощает получение справки при необходимости.\nGit работает с любой командой Использование Git с инструментом управления исходным кодом позволяет повысить эффективность работы группы, применяя политики, автоматизирующие процессы и улучшая видимость и отслеживаемость работы. Команда может сопоставлять отдельные средства для управления версиями, отслеживания рабочих элементов, а также непрерывной интеграции и развертывания. кроме того, они могут выбрать такое решение, как GitHub или Azure DevOps , которые поддерживают все эти задачи в одном месте. …","date":1651850408,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651850408,"objectID":"b51c39c0ac0ec5a38bb139cda30bb055","permalink":"https://example.com/post/git/","publishdate":"2022-05-06T18:20:08+03:00","relpermalink":"/post/git/","section":"post","summary":"Что такое git и с чем его едят","tags":["Academic","开源"],"title":"Git","type":"post"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Что такое Markdown Markdown — это язык текстовой разметки документов. Его придумали в 2004 году блогер Джон Грубер и интернет-активист Аарон Шварц, чтобы быстро форматировать статьи. Требования к языку у них были такие:\n Чем проще — тем лучше. Документы с этой разметкой можно перевести в красиво отформатированный вид, как на веб-странице. Исходный текст материала должен оставаться читаемым даже без преобразования в веб-страницу. В результате у них получился простой язык, который активно используется до сих пор.  Смысл маркдауна в том, что вы делаете разметку своего документа минимальными усилиями, а уже какой-то другой плагин или программа превращает вашу разметку в итоговый документ — например в HTML. Но можно и не в HTML, а в PDF или что-нибудь ещё. Маркдаун — это как бы язык для других программ, чтобы они формировали документы на основе вашего текста.\nЕдинственное, что вам может понадобиться, — настроить в этом плагине шрифты, отступы и цвета, чтобы результат выглядел красиво. Один раз настраиваете, а потом быстро пишете много материалов, которые на выходе превратятся в готовые статьи с хорошей разметкой.\nКак работает эта магия Если мы просто напишем текст и разметим его с помощью Markdown, то он так и останется текстом с разными спецсимволами. Чтобы результат выглядел как на скриншоте выше, используют специальные редакторы, плагины или программы, которые поддерживают этот язык разметки.\nРаботает это так:\n Программа берёт текст и смотрит, есть ли в нём эта разметка. Если есть — применяет нужное правило оформления к нужному фрагменту текста и выводит его красиво. Если нужно — подставит картинку, сделает ссылку и сама оформит список. Если разметки нет — выводит содержимое просто как текст. Такое работает не в каждом редакторе — если в Word выделить текст звёздочками, то это так и останется текстом со звёздочками, без курсива или жирного оформления. Но почти все редакторы понимают, когда в них вставляют текст, размеченный маркдауном. Они тогда сразу выделяют нужные фрагменты, делают заголовки и вставляют картинки.  Зачем использовать Markdown Причин несколько.\n Если вам нужно простое оформление текста без изысков или вам нужно быстро подготовить материал к публикации без сложной вёрстки. Если вы делаете блог или другой статичный сайт, на котором хотите размещать свои тексты с лаконичным дизайном. Вы хотите писать красивые сообщения в WhatsApp или Telegram. Вы программист и пишете документацию к своему проекту на GitHub Ваш собственный телеграм-секретарь: делаем вместе  Но во всех этих случаях вам нужно одно — сделать минимальную вёрстку текста так, чтобы он выглядел опрятно и чтобы его можно было прочитать и без специальных программ.\n","date":1651850408,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651850408,"objectID":"a0ade9b4b218a8a455292eee739b86e8","permalink":"https://example.com/post/markdown/","publishdate":"2022-05-06T18:20:08+03:00","relpermalink":"/post/markdown/","section":"post","summary":"Markdown","tags":["Academic","开源"],"title":"Markdown","type":"post"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Содержание основных элементов отчета:\n  Титульный лист. Первый лист работы оформляется строго по образцу, который обычно приводится в методических пособиях по вашему предмету. В нем не просто требуется указать такие элементы, как название образовательного учреждения, вид работы и сведения об исполнителе, но и расположить их в строгом соответствии со стандартами.\n  Реферат. Реферат фактически является кратким представлением всего вашего отчета и содержит ряд статистических сведений. В нем нужно указать количество частей, страниц работы, иллюстраций, приложений, таблиц, использованных литературных источников и приложений. Здесь же приводится перечень ключевых слов работы и собственно текст реферата. Последний подразумевает основные элементы работы от поставленных целей до результатов и рекомендаций по их внедрению. В практике вузов в отчеты по лабораторным работам реферат обычно не включают.\n  Введение. Во введении типовой лабораторной работы обычно прописывают цели проводимого исследования и задачи, выполнение которых поможет достичь поставленных целей. В то же время существуют работы, в которых студенты становятся настоящими первооткрывателями. Приходилось ли вам хотя бы однажды испытывать чувство крайнего любопытства и нетерпения при проведении лабораторной работы? Ощущать, что буквально через пару минут вы найдете ответ на вопрос, на который еще никто и никогда не находил ответа? Именно для таких исследований пишется развернутое введение с доказательством актуальности и новизны изучаемой темы. Чтобы действительно провести исследование в той области, в которой, как говорится, еще не ступала нога человека, во введении вам понадобится привести оценку современного состояния рассматриваемой проблемы и обосновать необходимость ее решения.\n  Основная часть. Так как в разных вузах и в разных дисциплинах существуют свои тонкости проведения лабораторных работ, содержание основной части подробно описывают в соответствующих методичках. Важно, чтобы в этом разделе работы была отражена ее суть, описана методика и результаты проделанной работы. В основной части прописывают следующие элементы:\n цели проводимого исследования; задачи, выполнение которых поможет достичь поставленных целей; ход работы, в котором описываются выполненные действия; прочие разделы, предусмотренные методическими материалами по изучаемой дисциплине.    Заключение. В этой части работы вам потребуется сделать выводы по полученным в ходе лабораторной работы результатам. Для этого оцените, насколько полно выполнены поставленные задачи. В сложных работах могут присутствовать и другие элементы, например, рекомендации для дальнейшего применения результатов проведённой работы.\n  ","date":1651850408,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651850408,"objectID":"677b480c0a60831b4e4ce258e50b5ccc","permalink":"https://example.com/post/report/","publishdate":"2022-05-06T18:20:08+03:00","relpermalink":"/post/report/","section":"post","summary":"Как правильно оформлять отчеты","tags":["Academic","开源"],"title":"Отчеты","type":"post"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Введение За прошедшую неделю я выполнил лабораторные работы №5 и №6, темы которых были “Анализ файловой системы Linux” и “Поиск файлов. Перенаправление ввода-вывода. Просмотр запущенных процессов”.\nЛабораторная работа №5 Целью данной лабораторной было ознакомление с файловой системой Linux, её структурой, именами и содержанием каталогов. Приобретение практических навыков по применению команд для работы с файлами и каталогами, по управлению процессами (и работами), по проверке использования диска и обслуживанию файловой системы.\nЗадачи, которые я выполнил:\n Выполнить все примеры, приведенные в теории. Различные манипуляции с файлами и каталогами(копирование, вырезание, переименование и т.д.). Кратко охарактеризовать mount, fsck, mkfs,  Лабораторная работа №6 Целью данной лабораторной было ознакомление с инструментами поиска файлов и фильтрации текстовых данных. Приобретение практических навыков: по управлению процессами (и заданиями), по проверке использования диска и обслуживанию файловых систем.\nЗадачи, которые я выполнил:\n Изучение команд find и grep и их применение на практике. Запуск программ в фоновом режиме. Изучение команды kill и применение ее для завершения процесса. Использование перенаправление вывода-ввода.  Заключение В итоге, я ближе познакомился с файловой системой Linux, её структурой, именами и содержанием каталогов, а также приобрел практические навыки: по управлению процессами (и заданиями), по проверке использования диска и обслуживанию файловых систем.\n","date":1651848410,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651848410,"objectID":"d4fc97908d0d24619c6e8dd53ebce529","permalink":"https://example.com/post/secondweek/","publishdate":"2022-05-06T17:46:50+03:00","relpermalink":"/post/secondweek/","section":"post","summary":"Пост о второй прошедшей неделе","tags":["Academic","开源"],"title":"Вторая  неделя","type":"post"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Введение Прошлая неделя немного отличалась от остальных: я участвовал в спартакиаде по волейболу. К сожаленю, мы проиграли, но все равно это было весело. Если же говорить об операционных системах, то я выполнил лабораторные работы №3 и №4, темы которых были “Markdown” и “Основы интерфейса взаимодействия пользователя с системой Unix на уровне командной строки”.\nЛабораторная работа №3 Целью данной лабораторной было научиться оформлять отчёты с помощью легковесного языка разметки Markdown. Необходимо было переделать отчеты по 2-ой лабораторной работе в формате Markdown. Для удобства я пользовался Visual studio code. Эта программа позволяет предварительно просматривать файла пусть и снебольшими ошибками. Это немного упрощает процесс создания отчетов и презентаций. В ходе работы я ознакомился с базовыми сведениями о Markdown, а далее я переделал отчет по 2-ой лабораторной работе.\nЛабораторная работа №4 Целью данной лабораторной было приобретение практических навыков взаимодействия пользователя с системой посредством командной строки. В ходе работы я вспомнил команды, которые изучал на Архитектуре вычислительных систем, поностольгировал по беззаботным временам в 1-ом модуле. задачи, которые я выполнил:\n Определите полное имя вашего домашнего каталога. Далее относительно этого каталога будут выполняться последующие упражнения. Выполните следующие действия:  Перейдите в каталог /tmp. Выведите на экран содержимое каталога /tmp. Для этого используйте команду ls различными опциями. Поясните разницу в выводимой на экран информации. Определите, есть ли в каталоге /var/spool подкаталог с именем cron? Перейдите в Ваш домашний каталог и выведите на экран его содержимое. Определите,кто является владельцем файлов и подкаталогов?   Выполните следующие действия:  В домашнем каталоге создайте новый каталог с именем newdir. В каталоге ~/newdir создайте новый каталог с именем morefun. В домашнем каталоге создайте одной командой три новых каталога с именами letters, memos, misk. Затем удалите эти каталоги одной командой. Попробуйте удалить ранее созданный каталог ~/newdir командой rm. Проверьте, был ли каталог удалён. Удалите каталог ~/newdir/morefun из домашнего каталога. Проверьте, был ли каталог удалён.   С помощью команды man определите, какую опцию команды ls нужно использовать для просмотра содержимое не только указанного каталога, но и подкаталогов,входящих в него. С помощью команды man определите набор опций команды ls, позволяющий отсортировать по времени последнего изменения выводимый список содержимого каталога с развёрнутым описанием файлов. Используйте команду man для просмотра описания следующих команд: cd, pwd, mkdir, rmdir, rm. Поясните основные опции этих команд. Используя информацию, полученную при помощи команды history, выполните модификацию и исполнение нескольких команд из буфера команд.  Заключение В итоге, я научился оформлять отчеты и презентации в формате Markdown, а также взаимодействовать с системой посредством командной строки\n","date":1651848410,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651848410,"objectID":"95d4837016870121838fc1d4a9d1b40e","permalink":"https://example.com/post/firstweek/","publishdate":"2022-05-06T17:46:50+03:00","relpermalink":"/post/firstweek/","section":"post","summary":"Пост о первой прошедшей неделе","tags":["Academic","开源"],"title":"Первая неделя","type":"post"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Введение За прошедшую неделю я выполнил лабораторные работы №7 и №8, темы которых были “Командная оболочка Midnight Commander” и “Текстовой редактор vi”.\nЛабораторная работа №7 Целью данной лабораторной было освоение основных возможностей командной оболочки Midnight Commander. Приобретение навыков практической работы по просмотру каталогов и файлов; манипуляций с ними.\nЗадачи, которые я выполнил:\n Изучил и поигрался с меню MC. Выполнил различные действия с файлами в встроенном редакторе MC.  Лабораторная работа №6 Целью данной лабораторной было ознакомление с инструментами поиска файлов и фильтрации текстовых данных. Приобретение практических навыков: по управлению процессами (и заданиями), по проверке использования диска и обслуживанию файловых систем.\nЗадачи, которые я выполнил:\n Изучил основные возможности редактора vi. Выполнил различные действия с текстом в редакторе.  Заключение В итоге, я ближе познакомился с Midnight Commander, встроенном в него редактором, а также редактором vi.\n","date":1651848410,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651848410,"objectID":"5a3f7efdc176ae16d1e4583b9d65e906","permalink":"https://example.com/post/thirdweek/","publishdate":"2022-05-06T17:46:50+03:00","relpermalink":"/post/thirdweek/","section":"post","summary":"Пост о третьей прошедшей неделе","tags":["Academic","开源"],"title":"Третья неделя","type":"post"},{"authors":["Мажитов Магомед","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Мажитов Магомед","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]